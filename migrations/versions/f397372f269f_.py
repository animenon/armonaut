# Copyright (C) 2017 Seth Michael Larson
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""empty message"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f397372f269f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('github_id', sa.BigInteger(), nullable=True),
    sa.Column('github_login', sa.String(), nullable=True),
    sa.Column('github_email', sa.String(), nullable=True),
    sa.Column('github_access_token', sa.String(), nullable=True),
    sa.Column('bitbucket_id', sa.String(), nullable=True),
    sa.Column('bitbucket_login', sa.String(), nullable=True),
    sa.Column('bitbucket_email', sa.String(), nullable=True),
    sa.Column('bitbucket_access_token', sa.String(), nullable=True),
    sa.Column('bitbucket_refresh_token', sa.String(), nullable=True),
    sa.Column('gitlab_id', sa.BigInteger(), nullable=True),
    sa.Column('gitlab_login', sa.String(), nullable=True),
    sa.Column('gitlab_email', sa.String(), nullable=True),
    sa.Column('gitlab_access_token', sa.String(), nullable=True),
    sa.Column('gitlab_refresh_token', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_accounts_bitbucket_id'), 'accounts', ['bitbucket_id'], unique=False)
    op.create_index(op.f('ix_accounts_github_id'), 'accounts', ['github_id'], unique=False)
    op.create_index(op.f('ix_accounts_gitlab_id'), 'accounts', ['gitlab_id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('owner', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('remote_host', sa.String(length=2), nullable=False),
    sa.Column('remote_id', sa.BigInteger(), nullable=False),
    sa.Column('default_branch', sa.String(), nullable=False),
    sa.Column('private', sa.Boolean(), nullable=False),
    sa.Column('secret_env', sa.String(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_owner'), 'projects', ['owner'], unique=False)
    op.create_index(op.f('ix_projects_remote_host'), 'projects', ['remote_host'], unique=False)
    op.create_table('builds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('finish_time', sa.DateTime(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=8), nullable=False),
    sa.Column('commit_branch', sa.String(), nullable=False),
    sa.Column('commit_sha', sa.String(), nullable=False),
    sa.Column('commit_author', sa.String(), nullable=False),
    sa.Column('commit_url', sa.String(), nullable=False),
    sa.Column('commit_tag', sa.String(), nullable=True),
    sa.Column('pull_request_number', sa.Integer(), nullable=True),
    sa.Column('pull_request_branch', sa.String(), nullable=True),
    sa.Column('pull_request_slug', sa.String(), nullable=True),
    sa.Column('pull_request_url', sa.String(), nullable=True),
    sa.Column('env', sa.String(), nullable=True),
    sa.Column('install', sa.String(), nullable=True),
    sa.Column('script', sa.String(), nullable=True),
    sa.Column('after_success', sa.String(), nullable=True),
    sa.Column('after_failure', sa.String(), nullable=True),
    sa.Column('after_script', sa.String(), nullable=True),
    sa.Column('deploy', sa.String(), nullable=True),
    sa.Column('services', sa.String(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_builds_commit_branch'), 'builds', ['commit_branch'], unique=False)
    op.create_index(op.f('ix_builds_number'), 'builds', ['number'], unique=False)
    op.create_index(op.f('ix_builds_pull_request_number'), 'builds', ['pull_request_number'], unique=False)
    op.create_index(op.f('ix_builds_status'), 'builds', ['status'], unique=False)
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('finish_time', sa.DateTime(), nullable=True),
    sa.Column('number', sa.SmallInteger(), nullable=False),
    sa.Column('env', sa.String(), nullable=True),
    sa.Column('droplet_id', sa.String(), nullable=True),
    sa.Column('status', sa.String(length=8), nullable=False),
    sa.Column('build_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['build_id'], ['builds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jobs_status'), 'jobs', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_jobs_status'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_builds_status'), table_name='builds')
    op.drop_index(op.f('ix_builds_pull_request_number'), table_name='builds')
    op.drop_index(op.f('ix_builds_number'), table_name='builds')
    op.drop_index(op.f('ix_builds_commit_branch'), table_name='builds')
    op.drop_table('builds')
    op.drop_index(op.f('ix_projects_remote_host'), table_name='projects')
    op.drop_index(op.f('ix_projects_owner'), table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_accounts_gitlab_id'), table_name='accounts')
    op.drop_index(op.f('ix_accounts_github_id'), table_name='accounts')
    op.drop_index(op.f('ix_accounts_bitbucket_id'), table_name='accounts')
    op.drop_table('accounts')
    # ### end Alembic commands ###
